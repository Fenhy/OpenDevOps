#!/bin/bash
COMPOSE_YAML='docker-compose.yaml'
COMPOSE_PROJECT='odo'
DOCKER_COMPOSE="docker-compose --compatibility -f ${COMPOSE_YAML} -p ${COMPOSE_PROJECT}"
COMPOSE_CMD="${1-''}"
COMPOSE_SVC="${2-''}"

function help_doc_cmd
{
    cat <<EOF
$0 <COMMAND>:
    start     - Up container(s) to start service(s)
    stop      - Down container(s) to stop service(s)
    restart   - Restart container(s) to restart service(s)
EOF
    exit 1
}

function help_doc_svc
{
    cat <<EOF
$0 ${COMPOSE_CMD} <SERVICE>:
    all       - All Services
    ldap      - OpenLDAP and PhpLDAPAdmin
    ssp       - Self Service Password
    mysql     - MySQL
    jira      - Jira Software
    conf      - Confluence
    sonar     - SonarQube Community Edition
    jenkins   - Jenkins
    gitlab    - GitLab Community Edition
    harbor    - Harbor
    rancher   - Rancher
    jms       - JumpServer
EOF
    exit 1
}

function check_env
{
    for _tool in "docker" "docker-compose"
    do
        output=$(${_tool} --version 2>&1) || {
            echo -e "\033[33;6m${_tool} is required in this machine \033[0m"
            echo "${output}"
            exit 1
        }
    done
}

function check_odo_cli
{
    echo "start stop restart" | grep -qw "${COMPOSE_CMD}" || help_doc_cmd
    echo "all ldap ssp mysql jira conf sonar jenkins gitlab harbor rancher jms" | grep -qw "${COMPOSE_SVC}" || help_doc_svc
}

function check_odo_svc
{
    if [[ "${COMPOSE_SVC}" == "all" ]]; then
        COMPOSE_SVC=""
    elif [[ "${COMPOSE_SVC}" == "ldap" ]]; then
        COMPOSE_SVC="odo-openldap odo-phpldapadmin"
    else
        COMPOSE_SVC="odo-${COMPOSE_SVC}"
    fi
}

## Main
check_env
check_odo_cli
if [[ "${COMPOSE_CMD}" == "start" ]]; then
    ${DOCKER_COMPOSE} pull "${COMPOSE_SVC}"
    ${DOCKER_COMPOSE} up -d "${COMPOSE_SVC}"
elif [[ "${COMPOSE_CMD}" == "stop" ]]; then
    ${DOCKER_COMPOSE} down "${COMPOSE_SVC}"
elif [[ "${COMPOSE_CMD}" == "restart" ]]; then
    ${DOCKER_COMPOSE} restart "${COMPOSE_SVC}"
fi
