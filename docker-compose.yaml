version: "3"
services:

  odo-ldap-openldap:
    image: registry.cn-hangzhou.aliyuncs.com/bxwill/openldap
    container_name: odo-ldap-openldap
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '1G'
    ports:
      - 18389:389
    volumes:
      - ./odo-ldap/db:/var/lib/ldap
      - ./odo-ldap/config:/etc/ldap
    environment:
      SLAPD_DOMAIN: qualitysphere.github.io
      SLAPD_PASSWORD: QualitySphere

  odo-ldap-phpldapadmin:
    image: registry.cn-hangzhou.aliyuncs.com/bxwill/phpldapadmin
    container_name: odo-ldap-phpldapadmin
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '512M'
    ports:
      - 18880:80
    environment:
      LDAP_SERVER_HOST: odo-openldap

  odo-ldap-ssp:
    image: registry.cn-hangzhou.aliyuncs.com/bxwill/ssp:1.3
    container_name: odo-ldap-ssp
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '512M'
    ports:
      - 18080:80
    volumes:
      - ./odo-ldap/ssp/config.inc.php:/var/www/html/conf/config.inc.php

  odo-pg:
    image: registry.cn-hangzhou.aliyuncs.com/bxwill/postgres:10
    container_name: odo-pg
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: '4G'
    ports:
      - 18432:5432
    volumes:
      - ./odo-pg:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: QualitySphere

  odo-jira:
    image: registry.cn-hangzhou.aliyuncs.com/bxwill/jira-software:8.11
    container_name: odo-jira
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: '8G'
    ports:
      - 8080:8080
    volumes:
      - ./odo-jira:/var/atlassian/application-data/jira

  odo-conf:
    image: registry.cn-hangzhou.aliyuncs.com/bxwill/confluence-server:7.5
    container_name: odo-conf
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: '8G'
    ports:
      - 8090:8090
      - 8091:8091
    volumes:
      - ./odo-conf:/var/atlassian/application-data/confluence

  odo-gitlab:
    image: registry.cn-hangzhou.aliyuncs.com/bxwill/gitlab-ce:13.3.5
    container_name: odo-gitlab
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: '8G'
    ports:
      - 12080:80
      - 12443:443
      - 222:222
    volumes:
      - ./odo-gitlab/data:/var/opt/gitlab
      - ./odo-gitlab/config:/etc/gitlab

  odo-jenkins:
    image: registry.cn-hangzhou.aliyuncs.com/bxwill/jenkins:blueocean
    container_name: odo-jenkins
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: '8G'
    ports:
      - 15080:8080
      - 50000:50000
    volumes:
      - ./odo-jenkins/jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock

  odo-sonar:
    image: registry.cn-hangzhou.aliyuncs.com/bxwill/sonar:7.9
    container_name: odo-sonar
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: '4G'
    ports:
      - 9000:9000
    environment:
      SONARQUBE_JDBC_URL: "jdbc:postgresql://odo-pg:5432/sonar"
      SONARQUBE_JDBC_USERNAME: postgres
      SONARQUBE_JDBC_PASSWORD: QualitySphere
    volumes:
      - ./odo-sonar/data:/opt/sonarqube/data
      - ./odo-sonar/logs:/opt/sonarqube/logs
      - ./odo-sonar/extensions:/opt/sonarqube/extensions
      - ./odo-sonar/sonar.properties:/opt/sonarqube/conf/sonar.properties

#  odo-harbor:
#    image: registry.cn-hangzhou.aliyuncs.com/bxwill/harbor
#    container_name: odo-harbor
#    restart: always
#    deploy:
#      resources:
#        limits:
#          cpus: '2'
#          memory: '8G'
#    ports:
#      - 18xxx:8080
#      - 18xxx:50000
#    volumes:
#      - ./odo-harbor/:/var/

  odo-rancher:
    image: registry.cn-hangzhou.aliyuncs.com/bxwill/rancher:2.4.8
    container_name: odo-rancher
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: '8G'
    ports:
      - 17433:443
    volumes:
      - ./odo-rancher:/var/lib/rancher
    environment:
      CATTLE_SYSTEM_CATALOG: bundled
      AUDIT_LEVEL: 3

  odo-jms:
    image: registry.cn-hangzhou.aliyuncs.com/bxwill/jms_all:2.1.2
    container_name: odo-jms
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: '8G'
    ports:
      - 17080:80
      - 2222:2222
    volumes:
      - ./odo-jms/data:/opt/jumpserver/data
      - ./odo-jms/mysql:/var/lib/mysql
    environment:
      SECRET_KEY: UGFn28Pp09SiJr60OMXs8e7lAqhJa3O1ztK8tJhMB5Aq1XNF6g
      BOOTSTRAP_TOKEN: KIaSh2O7JR8r6Q0m

#  odo-portal:
#    image: registry.cn-hangzhou.aliyuncs.com/bxwill/odo-portal
#    container_name: odo-portal
#    restart: always
#    deploy:
#      resources:
#        limits:
#          cpus: '0.2'
#          memory: '512M'
#    ports:
#      - 80:80
#      - 443:443
